c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
c27eae0e175986caccfa5d98c74776e9752585f9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
9963b4f00c23ccc91de832abc80fce4616185bb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
15a3254530dfb1c475527f0f5d35659e7e248e65:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0f93dc5dc22c8d41ce763b510e3145d72310cf1e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
24ab85e278f2bb20f4c1e621d68768600de31422:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a7e2fdb32b017016de8a507085ac78a805bbc797:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
52d28760d84ff66e82587a8a6ed0faa2c0a34cb1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
016afee8a6f7d2db4e6ca7a4b7e79b2759d913f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f73be11fb1b08e3302fbd9ea390af76d315043d6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
202b5f59690c3f4facf66ccc392fe683126bc681:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
dcae44d0c11f70b8b1c1677a0823e080730a0d02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8a81cd5f38a65041f16ced4d6c83f32a21da0a3d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
e76b7ad42e0d259e9a011902fe7ec35d8f3fee26:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
07b49d2b884d5d27c6556d9d9984813a32184535:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
68d704f85bd831126ae688e149cdf5d24d0998c5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
dda772b3a1129f96646810d0726261cbe5db8265:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
cd5b097283e6da8c1882c1390d2a90d69634ea66:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
ca60310e802fbc32bd69be5bb930b6e27c3b0bed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8f301b545847268f0b40f9c3b8ff24d32661e76c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f5d124cc340e00d302c2ca0fe760e470f27684c3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f79919cc2f6a479abe97e26675f7bf0d4530ab7e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
bd5d6b6573e511465cc3949e5b7e7edd29781578:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
3d6e072b14eca7216b5c88c3f220c371f67d2cef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            getGroundStationPosition( testTime ).segment( 0, 3 );
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4ee19e46736f9ac90e9b48b7b1162b0d07e3b10d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:              getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
69aee6817af9b52f65410e918d0f572419de07ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
bfb082e86e2cc340b5cfdc56e270b5bb57aaa19d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
aaedee3a9e7da6133442df6c3b94cf98051771d7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2c1c819171f7eebba80986b27d4c5bc0d601868f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0a8b05d8abc4bff895b0047ed64afe3a985f5c02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
316b4112219f5690967d7479247eeaefa02cc755:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
e3e57d454df3e99d1a0e9b1dd8d7f11819873d36:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0c42fb1563d4fb6e1688dafaf130606e61762b25:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f27749fff61aec8bbb267daae7b38a4c28c7f842:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
b3a0ff7c05b1a81b7e1da62cac0f43935572d4dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
ec07f5a4515dd55bb24a4b7416c4891e0e9e4cfa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
93c433bbf8d8b4a39f65dc23d85308378bd18df9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
46ed985b6a2b2e5ddef722abc3b231abb89a9d67:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a6feda542efed559abdc9d12c84f78de2b2c979f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
bbf04ab5e7ab1e066f65d3efc5079e29a87e7c2e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
c24841ef096a244d8cbafc28cd760985d6e4b357:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
fbdeb9fc58b07d5977ad285c4bd8e49d5fdefbd3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
dbe7460cb43b9d6afa85d4e0f3addd784b636b4e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4ba4d53cfb5e0f1578ac669533548c32dbe599e3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
b708cf3e916b2f014233d669ae9155a213e63336:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8db7db0cecb231fea884f987e0fed61637c77a40:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
10fd67c80d50702708ad138f3740f51ee4006469:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
98959556d0e8dba576259abab21ec87b41e32cd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
894fe7d6ec6fd6932761016ddae4e0ad1c3ce92e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
6037793f15ca70356dc787c12e7726c3865943ae:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
92b85a155c29a14faf1081a9cf1db8f5c5e9ebc4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8536f107a864ae257a12fa831354f7bc57c733a5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
54906f902e473917cdd4f200555782565d13cca3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
961da07e90883819ab3836fde0bab98ee72c3d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f858ba63b17f09b1a1aa37605bb3a68f0df67148:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
71968c86ff774f3ecf0964d2cb8ffcf4b9df69fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2eb0bd684947afaa9b6f176cbf055c48aaf60788:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
bbbc0be71e508169597b826d205dc13c1df006ed:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
72551579cc2ef8be2abebc7b26db7bad33540aa4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
9ef890c2016d5b7ff91f9561c3dd45ea442673bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
26d6f651dcf165a9f6d138457ccf78558d87a1b8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
caa4d80dae18fa17d3cf40ad41310815b7133568:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1991531801d666bc9ea1ab95c7adfdb5f8931d4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
07d98fab2c1eaf96d1436554732efcd392c0b436:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
31718b25e56bedfcb0ec9b081c7b235e87240fb5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
722361253728bf1a1cd84b47b231524f7b15cbe7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4d965bee85ac52cfc1bf042f7f20453c868e6d2d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0c98d24f9d71a3cc8ebd80586838d4333b47a305:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
afb316d81959a8faa0aff99fc679bcb4786a9644:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f57d435c5ffba4ac82703b371ccba7a4333edc06:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2e01ef548938e4abc0b4e41c9c5bad7161f45b9e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4c4ed83f64a45828c8c584b35693d440a203a8b7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
403a441f3b152dab9c35e3899f8fbf0773d5bb89:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
996a8730d4aee30a34a59f692b2353152d2e780b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
d2568f99a4684ede59cd513c9c834c630b1fd09e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f8e08f0b4c72ac3ccea4f9c117555d24fe3f9780:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a0460697ecb9a44334839936e5f3d9cc7fec2f5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/CMakeLists.txt:set(GROUNDSTATIONSDIR "${ASTRODYNAMICSDIR}/GroundStations")
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:  "${SRCROOT}${GROUNDSTATIONSDIR}/nominalGroundStationState.cpp"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:  "${SRCROOT}${GROUNDSTATIONSDIR}/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:add_executable(test_GroundStations "${SRCROOT}${GROUNDSTATIONSDIR}/UnitTests/unitTestGroundStations.cpp")
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:setup_custom_test_program(test_GroundStations "${SRCROOT}${GROUNDSTATIONSDIR}")
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:target_link_libraries(test_GroundStations tudat_simulation_setup tudat_propagators tudat_aerodynamics tudat_geometric_shapes tudat_gravitation tudat_mission_segments tudat_electro_magnetism tudat_ephemerides tudat_numerical_integrators tudat_reference_frames tudat_basic_astrodynamics tudat_input_output tudat_basic_mathematics tudat_propagators tudat_spice_interface cspice ${Boost_LIBRARIES})
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:add_executable(test_GroundStationState "${SRCROOT}${GROUNDSTATIONSDIR}/UnitTests/unitTestGroundStationState.cpp")
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:setup_custom_test_program(test_GroundStationState "${SRCROOT}${GROUNDSTATIONSDIR}")
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/CMakeLists.txt:target_link_libraries(test_GroundStationState tudat_simulation_setup tudat_propagators tudat_aerodynamics tudat_geometric_shapes tudat_gravitation tudat_mission_segments tudat_electro_magnetism tudat_ephemerides tudat_numerical_integrators tudat_reference_frames tudat_basic_astrodynamics tudat_input_output tudat_basic_mathematics tudat_propagators tudat_spice_interface cspice ${Boost_LIBRARIES})
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStationState.cpp:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStationState.cpp:BOOST_AUTO_TEST_CASE( test_GroundStationState )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStationState.cpp:        boost::shared_ptr< NominalGroundStationState > stationStateFromOblateSpheroid = boost::make_shared< NominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStationState.cpp:        boost::shared_ptr< GeodeticNominalGroundStationState > geodeticStationStateFromOblateSpheroid = boost::make_shared< GeodeticNominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStationState.cpp:        boost::shared_ptr< NominalGroundStationState > shanghaiStationState = boost::make_shared< NominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:#include "Tudat/Astrodynamics/GroundStations/groundStation.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:#include "Tudat/SimulationSetup/createGroundStations.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:BOOST_AUTO_TEST_CASE( test_GroundStations )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:    createGroundStations( bodyMap, groundStations );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:    boost::shared_ptr< GroundStation > concepcionStation =
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:            bodyMap[ "Earth" ]->getGroundStation( "Concepcion" );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestGroundStations.cpp:    //setGroundStationPositionVariationFunction( concepcionStation);
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:#include "Tudat/Astrodynamics/GroundStations/pointingAnglesCalculator.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:        boost::shared_ptr< NominalGroundStationState > stationState = boost::make_shared< NominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:                    boost::bind( &NominalGroundStationState::getRotationFromBodyFixedToTopocentricFrame, stationState, _1 ) );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:        boost::shared_ptr< NominalGroundStationState > stationState = boost::make_shared< NominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:                    boost::bind( &NominalGroundStationState::getRotationFromBodyFixedToTopocentricFrame, stationState, _1 ) );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:        boost::shared_ptr< NominalGroundStationState > stationState = boost::make_shared< NominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:                    boost::bind( &NominalGroundStationState::getRotationFromBodyFixedToTopocentricFrame, stationState, _1 ) );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:        boost::shared_ptr< NominalGroundStationState > stationState = boost::make_shared< NominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/UnitTests/unitTestPointingAnglesCalculator.cpp:                    boost::bind( &NominalGroundStationState::getRotationFromBodyFixedToTopocentricFrame, stationState, _1 ) );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/basicTidalBodyDeformation.cpp:#include "Tudat/Astrodynamics/GroundStations/basicTidalBodyDeformation.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/basicTidalBodyDeformation.h:#include "Tudat/Astrodynamics/GroundStations/groundStation.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/basicTidalBodyDeformation.h:#include "Tudat/Astrodynamics/GroundStations/bodyDeformationModel.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/basicTidalBodyDeformation.h:            const boost::shared_ptr< ground_stations::NominalGroundStationState > siteState )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/bodyDeformationModel.cpp:#include "Tudat/Astrodynamics/GroundStations/bodyDeformationModel.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/bodyDeformationModel.cpp:        const boost::shared_ptr< ground_stations::NominalGroundStationState > nominalSiteState,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/bodyDeformationModel.h:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/bodyDeformationModel.h:            const boost::shared_ptr< ground_stations::NominalGroundStationState > siteState ) = 0;
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/bodyDeformationModel.h:        const boost::shared_ptr< ground_stations::NominalGroundStationState > nominalSiteState,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/groundStation.cpp:#include "Tudat/Astrodynamics/GroundStations/groundStation.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/groundStation.h:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/groundStation.h:#include "Tudat/Astrodynamics/GroundStations/pointingAnglesCalculator.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/groundStation.h:class GroundStation
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/groundStation.h:    GroundStation( const boost::shared_ptr< NominalGroundStationState > stationState,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/groundStation.h:    boost::shared_ptr< NominalGroundStationState > getNominalStationState( )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/groundStation.h:    boost::shared_ptr< NominalGroundStationState > nominalStationState_;
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.cpp:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.cpp:DirectGroundStationPositionVariationSettings::createInterpolatedPositionVariationFunction( )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.cpp:NominalGroundStationState::NominalGroundStationState(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.cpp:void NominalGroundStationState::updatePositionVariations( )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.cpp:Eigen::Vector3d NominalGroundStationState::getCartesianPositionInTime(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.cpp:void NominalGroundStationState::resetGroundStationPositionAtEpoch( const Eigen::Vector3d cartesianPosition )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.cpp:void NominalGroundStationState::setTransformationAndUnitVectors( )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h: *  settings for (re)generating a ground station position variation function. Used as a member variable of NominalGroundStationState
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:struct DirectGroundStationPositionVariationSettings
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:    DirectGroundStationPositionVariationSettings(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:class NominalGroundStationState
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:    NominalGroundStationState(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:    virtual ~NominalGroundStationState( ){ }
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:            boost::shared_ptr< DirectGroundStationPositionVariationSettings > settings )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:    boost::shared_ptr< DirectGroundStationPositionVariationSettings > getGroundStationPositionVariationSettings( )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:    virtual void resetGroundStationPositionAtEpoch( const Eigen::Vector3d cartesianPosition );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h:    boost::shared_ptr< DirectGroundStationPositionVariationSettings > directPositionVariationSettings_;
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/pointingAnglesCalculator.cpp:#include "Tudat/Astrodynamics/GroundStations/pointingAnglesCalculator.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/Astrodynamics/GroundStations/pointingAnglesCalculator.h:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/CMakeLists.txt:  "${SRCROOT}${SIMULATIONSETUPDIR}/createGroundStations.cpp"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/CMakeLists.txt:  "${SRCROOT}${SIMULATIONSETUPDIR}/createGroundStations.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/body.h:#include <Tudat/Astrodynamics/GroundStations/groundStation.h>
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/body.h:    void addGroundStation( std::string stationName, boost::shared_ptr< ground_stations::GroundStation > station )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/body.h:    boost::shared_ptr< ground_stations::GroundStation > getGroundStation( const std::string& stationName ) const
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/body.h:    std::map< std::string, boost::shared_ptr< ground_stations::GroundStation > > getGroundStationMap( ) const
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/body.h:    void updateGroundStationStateHistory( )
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/body.h:        for( std::map< std::string, boost::shared_ptr< ground_stations::GroundStation > >::iterator groundStationIterator =
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/body.h:    std::map< std::string, boost::shared_ptr< ground_stations::GroundStation > > groundStationMap;
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createBodyDeformationModel.cpp:#include "Tudat/Astrodynamics/GroundStations/basicTidalBodyDeformation.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createBodyDeformationModel.h:#include "Tudat/Astrodynamics/GroundStations/bodyDeformationModel.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createBodyDeformationModel.h:#include "Tudat/Astrodynamics/GroundStations/nominalGroundStationState.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:#include "Tudat/Astrodynamics/GroundStations/basicTidalBodyDeformation.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:#include "Tudat/SimulationSetup/createGroundStations.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:void createGroundStations( const std::map< std::string, boost::shared_ptr< Body > >& bodyMap,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:                boost::shared_ptr< ground_stations::NominalGroundStationState > stationState;
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:                    stationState = boost::make_shared< ground_stations::NominalGroundStationState >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:                            boost::bind( &ground_stations::NominalGroundStationState::getRotationFromBodyFixedToTopocentricFrame, stationState, _1 ) );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:                bodyMap.at( stationIterator->first.first )->addGroundStation(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:                            stationIterator->first.second, boost::make_shared< ground_stations::GroundStation >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:void setSingleBodyGroundStationPositionVariationFunctions( boost::shared_ptr< Body > body,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:    std::map< std::string, boost::shared_ptr< ground_stations::GroundStation > > groundStationMap =
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:            body->getGroundStationMap( );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:    for( std::map< std::string, boost::shared_ptr< ground_stations::GroundStation > >::iterator groundStationIterator =
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:        setGroundStationPositionVariationFunction( groundStationIterator->second,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:void setSingleBodyGroundStationPositionVariationFunctions( boost::shared_ptr< Body > body,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:    std::map< std::string, boost::shared_ptr< ground_stations::GroundStation > > groundStationMap =
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:            body->getGroundStationMap( );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:    for( std::map< std::string, boost::shared_ptr< ground_stations::GroundStation > >::iterator groundStationIterator =
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:        setGroundStationPositionVariationFunction( groundStationIterator->second,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:boost::function< Eigen::Vector3d( const double ) > getGroundStationPositionVariationFunction(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:        boost::shared_ptr< ground_stations::GroundStation > groundStation,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp://        boost::shared_ptr< ground_stations::NominalGroundStationState > nominalSiteState =
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:void setGroundStationPositionVariationFunction( boost::shared_ptr< ground_stations::GroundStation > groundStation,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:        displacementFunctions.push_back( getGroundStationPositionVariationFunction( groundStation, bodyWithStation, variationTypes[ i ],
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:                boost::make_shared< ground_stations::DirectGroundStationPositionVariationSettings >(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:void setGroundStationPositionVariationFunction( boost::shared_ptr< ground_stations::GroundStation > groundStation,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.cpp:    setGroundStationPositionVariationFunction( groundStation, bodyWithStation, variationTypes, initialTime, finalTime, timeStep );
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:#include "Tudat/Astrodynamics/GroundStations/groundStation.h"
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:void createGroundStations( const std::map< std::string, boost::shared_ptr< Body > >& bodyMap,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:void setSingleBodyGroundStationPositionVariationFunctions( boost::shared_ptr< Body > body,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:void setSingleBodyGroundStationPositionVariationFunctions( boost::shared_ptr< Body > body,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:boost::function< Eigen::Vector3d( const double ) > getGroundStationPositionVariationFunction(
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:        boost::shared_ptr< ground_stations::GroundStation > groundStation,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:void setGroundStationPositionVariationFunction( boost::shared_ptr< ground_stations::GroundStation > groundStation,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:void setGroundStationPositionVariationFunction( boost::shared_ptr< ground_stations::GroundStation > groundStation,
c77a19a41e010595a2b8b613bc3665e6f0272243:Tudat/SimulationSetup/createGroundStations.h:void updateGroundStationStates( std::vector< std::pair< std::string, std::string > >,
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4a3af964c77631a7ab196249a2a5c0253101111d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
adc350c9f64576db63e989ce89c8aed6d005134f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f7f1f90b6b9fb7095d529245a5681cd401f500ce:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
b68605c969d78bb7110a22cc7231e1efd345dd05:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
604e65fd283e2077f93b6d4a94e9096c63466c3f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
9167fc25bfa8f763baf6c20ebee25e2024548091:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                transmitterCelestialBody->getGroundStation( transmitter.second ) );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                    transmitterCelestialBody->getGroundStation(
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                receiverCelestialBody->getGroundStation( receiver.second ) );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                                            receiverCelestialBody->getGroundStation(
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                transmitterCelestialBody->getGroundStation( transmitter.second ) );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                                            transmitterCelestialBody->getGroundStation(
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                receiverCelestialBody->getGroundStation( receiver.second ) );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                                            receiverCelestialBody->getGroundStation(
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                transmitterCelestialBody->getGroundStation( transmitter.second ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                             transmitterCelestialBody->getGroundStation( transmitter.second )->getPointingAnglesCalculator( ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                             transmitterCelestialBody->getGroundStation( transmitter.second )->getPointingAnglesCalculator( ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                receiverCelestialBody->getGroundStation( receiver.second ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                             receiverCelestialBody->getGroundStation( receiver.second )->getPointingAnglesCalculator( ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/ObservableCorrections/createLightTimeCorrection.cpp:                                             receiverCelestialBody->getGroundStation( receiver.second )->getPointingAnglesCalculator( ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestAngularPositionModel.cpp:#include "SimulationSetup/createGroundStations.h"
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestAngularPositionModel.cpp:    createGroundStations( bodyMap, groundStations );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:#include "SimulationSetup/createGroundStations.h"
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:    createGroundStations( bodyMap, groundStations );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:    boost::shared_ptr< GroundStation > grazStation = boost::dynamic_pointer_cast< CelestialBody >( bodyMap[ "Earth"] )->
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:            getGroundStation( "Graz" );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:    boost::shared_ptr< GroundStation > yarragadeeStation = boost::dynamic_pointer_cast< CelestialBody >( bodyMap[ "Earth"] )->
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:            getGroundStation( "Yarragadee" );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:    boost::shared_ptr< GroundStation > vikingStation = boost::dynamic_pointer_cast< CelestialBody >( bodyMap[ "Mars"] )->
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:            getGroundStation( "Viking" );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:    boost::shared_ptr< GroundStation > mslStation = boost::dynamic_pointer_cast< CelestialBody >( bodyMap[ "Mars"] )->
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/UnitTests/unitTestNWayObservationModels.cpp:            getGroundStation( "MSL" );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://std::pair< std::map< std::string, std::vector< std::string > >, std::vector< std::string > > getBodiesWithAndWithoutGroundStations(
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://    std::map< std::string, std::vector< std::string > > celestialBodiesWithGroundStations;
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://    std::vector< std::string > bodiesWithoutGroundStation;
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://            if( std::find( bodiesWithoutGroundStation.begin( ), bodiesWithoutGroundStation.end( ), linkEndList.at( i ).first ) ==
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://                    bodiesWithoutGroundStation.end( ) )
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://                bodiesWithoutGroundStation.push_back( linkEndList.at( i ).first );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://            bool addGroundStation = 0;
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://            if( celestialBodiesWithGroundStations.count( linkEndList.at( i ).first ) == 0 )
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://                addGroundStation = 1;
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://            else if( std::find( celestialBodiesWithGroundStations[ linkEndList.at( i ).first ].begin( ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://                                celestialBodiesWithGroundStations[ linkEndList.at( i ).first ].end( ),
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://                                linkEndList.at( i ).first ) == bodiesWithoutGroundStation.end( ) )
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://                addGroundStation = 1;
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://            if( addGroundStation )
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://                celestialBodiesWithGroundStations[ linkEndList.at( i ).first ].push_back( linkEndList.at( i ).second );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.cpp://    return std::make_pair( celestialBodiesWithGroundStations, bodiesWithoutGroundStation );
60d276152593866c8c5f1dacb65777cd881af781:Tudat/Astrodynamics/ObservationModels/linkTypeDefs.h://std::pair< std::map< std::string, std::vector< std::string > >, std::vector< std::string > > getBodiesWithAndWithoutGroundStations(
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
400c2d744d95e8467bfe29182f1671a42054fab7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
09665e6e730b2dce0a1e7db13481ebdb5c4123b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
d00b27b1485fbe7067ce7d945a535a0d6092a6e9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
469d1f1cd1f5f21b5543adfe9eb8ea8bf726ce15:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
474ab46e075ae3bf1cc36d653b18a2d02a1ba2b9:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0d391e99075f96317e173ce0ccb64ef47ccb1bd8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
9134bbe576d7b418727ab1eb1054717df75f4ce2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
3e0a8ca26627dc8b756c344327b6bdf598e29ab4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
9df5062e50080db7693508da5b08172845021d53:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
622a266d68864cde3586c78f16f9ffc7ad3a5d60:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1913ea6865c5f1c7ef5e4191adcae79d7f089746:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a0bd0aefc32880dcb21acbaf842fcf1d7a0ebde2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
b9859297a80d5facdf137ea8e3d75e8550e92e10:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
c52fe0f43236099f6bdf1665415831174284b91b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
5760a0cbb6f25debbbecee5bd3cdbc8d97e18209:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
3dc33e26753dcb5e2a95f811781321fc251a64c2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
7c4929aef80611c4750450b941dba0a2dae116e2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
e51cf162cdc3bfa0341438745913b2675be32d23:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
6870cf7a79d12c10248e271be6cc820b0720246f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
08de0bf9339ebcfde52deacc03969c9ce36dc98c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
d371140039d5162946345517d4830f286f616183:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
062692e75cc0189afe398dc359e83c0316c07eef:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4f225c99b205c71b09f10a76695bf12ee24d11da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f29e44527b3f12f32c1731e7aa860662a383ebd7:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
327ea513310ea5f423661f31b90836593b934717:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4d87256c1f9c1675637d1096e1ad31adebbd0ebb:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8404bbbb632915759df241b0f9fb251fa887f816:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
ccb4b917fecdc51f68876b57ea0ba5d528fb9fc1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2ee07e7059e95adb310cbdc388113846f3d86d7f:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1b504436a0bda357f6b245e8cbb7d76bdc62187b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
d7e375a9e1c7fda9ead44a19b4af538386d9aa0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
c11f6adbc4c5e26f52156c643f925232e826e5bf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
7e01b460289dca58927d583988e96c189bc64a45:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
859a4d50d7a4473349960c425ee195074898e4df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
213cf4b62d4cda1f08b0bcfa7e04cc0b857a4944:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
5bdeb68b4df71ed894b2bddfdbceb0a3c8bfc428:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
131043a3dcfae73c0c3e8d335c3020a4b0d702b4:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
72834ff705916170cb842e726e91a388987de5bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1e7bcda426b4ad4d365cbb84b19d3dd1058dc26b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a8ced10b0818f9a1495a09524fcd9c4012c00d00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
51952e16ce2dc3c95d602388d7f983c969e557b6:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
08eae0cf8ae60e8972dab0d5c22fa114638a1a4c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
05928855e4c934f48117e995aa44f0f89d36ab00:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f961da73540824305a10a891a3028ff63d45a320:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
b4c29c3fa93461924a5212be21798837e6799cdd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
e82f7c484ee295e125813ad7fe95f233d579d472:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2e1b8ce25e6ff39ab42660f216572dc32670a442:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
70b8821efdc192c53e561b26a80339aed41535bc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
3a1d76d026fb2d4c582f2bf48da0135fe5542f02:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
84f1f2e76a9498ca0475b6749136ef0d0b229a74:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
ff87e53465db7e447608f7d4860f2c5a451da110:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1255e745319eb8915ce8555b27eb4784d657e38d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
cd593516e46a7b50fc7a33a6c88a6becb9e472de:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
229c4fe47b5698e5180c6aec04bc9d3c14dc0abf:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
055fd2610572b92dacc2fb0aeb46d21072d13902:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a059a6fa9833acfd78e46a6801c582c281c27aca:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
817e2804f1e75f4cbebebe4304d69cd7caab27aa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a7ce7ba477f13d6ef80bb44599e1cdd7ec62af63:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
87819386ee70e919405025cce610a2b5c4e234f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
598a1b1a10ce2e1d0d0e564a78a52686c269c65b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8f4182f6d3354984699f386686d2ec3fa88ef981:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1ead5835404dd3a73e4a6e9ee9bc78eb9773b008:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
e03d7e9f2119082fd43836ea4c45cad87353078d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f03d10e2fe190baa4d276308b23cee7c497f4b0c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
35dc914e7cbcfa8085df54a55bd21e204c968238:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
65a4d285a4407060802045fb6daa661e4abd487d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0de49ce86b7afda328f8e9ee6f89c747e54697df:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
4e4406fd454e8af20700c31a23cd3ea41f2f21fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
fa99fc06b1870cae9551331675f8fd4cd481e40b:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
21d78ec9bd792e968feba2e2c9450ae1bf72c064:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
143dd5cf0e414d53d3b465e493a244bb86bcc79a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f8a517fc0b35434cc98851cfdee5edaf090e7fcd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
04cb1548917c62e49955c3a2bb7eb7399be5408d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
fb5d1f59f5fb980c56c01ba6606957c6683d3a99:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a93337a505b6784b7cdc01304f0c9ff28c6e8b97:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a64499b48d0339843944472dbca0ea6a4976820a:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2355003b456bfa2320db1630055b6e464145e537:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
00c3e1c092e71d4c11eed4bc8a1ef3f24735a879:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
ecdcb7ec9f775e97944c35d95b41e2ba84db24cc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0f2f43710f0d3ae0fb9161fcd5be5ee8968dc0d1:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
7b16ac2fc0751044586446c4163e748b152acf5e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
f2e3f556aeb0407f321116df35836a5075d659f3:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
233c130c189ee710d6fb4cae604099a8219fb171:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2efd462f4b95130aa27756339f77e7081f8c7f6d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
5967a59484cb6389696529acb4524c3270a92434:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
86231b5a5dbc27a61122511fcca86c021a145604:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
0146e53413191edd6b9dbfa9b25ea7899409ab79:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
e8d93c3464ab9d1a1869edae96543ed95067fec0:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
6a88a46a4410204513691985edd86d18035ef3fd:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
17cc64f325fd488f9647b5e1ceb051c21b625fc8:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
9dfb4db478076d4bd51b8ca39d701f5c538f0140:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
2c6b5656309dc0be6b814452f1eac30fbec70845:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
d0021edd4d65da18034218f69ab2c34d7c4a07fc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8bed021fb5ae7d422cb556d2de030bec3f5157ad:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
fc0c6d13b1882d649e79319537d56fad5de56459:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1b2fd282aa04f6aed190af490857b3e0b2d17667:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
bf7d5dcbf643c3073bad9794c68c04df0247cc33:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
bf6377484ef2318c394d07c2c2350d8d420e48b5:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
1657769acd74a0efd2f962d2ec11d4177f1a76f2:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
fe000d5957c684bc1cc56d2f71df98194346959e:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
3707860078781f76b318f0be3648d4ccf8f57507:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
a99122683f4ab1bf11a60ccc009052b23e5cea17:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
8b3f8329e2478268b6c4cea77d1fb0f0510ae8fe:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
98e285aaed145a5b554a2ac5811984c2d896f72c:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
ce67ee806f3308a59600f28a75a14b3bbc3b507d:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
b36a608044c24c79373a931dd0d810ccfed8b5fa:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroundStationPosition );
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) +
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 );
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 3, 3 ) ).cast< long double >( ) +
39eee3f7192a4b638a6c3cd75cef437f5e4f13dc:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:            ( rotationModel->getDerivativeOfRotationToBaseFrame( testTime ) * getGroundStationPosition( testTime ).segment( 0, 3 ) ).cast< long double >( );
a4af3b791a7ef7a4828fd908399477d58d84d0da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:basic_mathematics::Vector6d getGroundStationPosition(
a4af3b791a7ef7a4828fd908399477d58d84d0da:Tudat/Astrodynamics/Ephemerides/UnitTests/unitTestCompositeEphemeris.cpp:                earthEphemeris, rotationModel, &getGroun